#! /usr/bin/env janet

(import shlib)
(import sh)

(sh/init)

(def hist-file (first (shlib/wordexp "~/.janetsh.hist")))
(def rc-file (first (shlib/wordexp "~/.janetsh.rc")))

(shlib/ln/history-set-max-len 512)
(shlib/ln/set-multiline true)
(try 
  (shlib/ln/history-load hist-file)
  ([e] nil))

(defn getprompt [p]
  (string (os/cwd) " " (parser/state p) "$ "))

(defn getln [prompt buf]
  (when-let [ln (shlib/ln/get-line prompt)]
    (when (not= (length ln) 0)
      (shlib/ln/history-add ln))
    (buffer/push-string buf ln "\n")
    buf))

(defn want-implicit [buf p]
  (and (> (length buf) 1) (empty? (parser/state p)) (not= (buf 0) 40)))

(defn getchunk [buf p]
  (sh/update-all-jobs-status)
  (when (getln (getprompt p) buf)
    (when (want-implicit buf p)
      (let [line (string buf)]
        (buffer/clear buf)
        (buffer/format buf "(sh/$? %s)\n" line)))
    buf))

(setdyn :pretty-format "%.40p")

# convenience bindings.
(def $$ :macro sh/$$)
(def $? :macro sh/$?)
(def $  :macro sh/$)
(def clear sh/clear)
(def do-lines sh/do-lines)
(def out-lines sh/out-lines)

# load user rc script.
# The user can overwrite the prompt with whatever they want.
(when (os/stat rc-file)
  (eval-string (slurp rc-file)))

(repl getchunk nil (fiber/getenv (fiber/current)))
(sh/terminate-all-jobs)
(shlib/ln/history-save hist-file)

